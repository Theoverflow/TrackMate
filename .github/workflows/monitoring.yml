name: Monitoring Component CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'components/monitoring/**'
      - 'shared/**'
      - '.github/workflows/monitoring.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'components/monitoring/**'
      - 'shared/**'

jobs:
  test:
    name: Test Monitoring Component
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-monitoring-${{ hashFiles('components/monitoring/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-monitoring-
    
    - name: Install dependencies
      run: |
        cd components/monitoring
        pip install -e ".[dev]"
    
    - name: Lint with ruff
      run: |
        cd components/monitoring
        ruff check sdk/ sidecar/
    
    - name: Type check with mypy
      run: |
        cd components/monitoring
        mypy sdk/ sidecar/ || true
    
    - name: Run tests
      run: |
        cd components/monitoring
        pytest tests/ -v --cov=sdk --cov=sidecar --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: components/monitoring/coverage.xml
        flags: monitoring
        name: monitoring-${{ matrix.python-version }}

  build-sdk:
    name: Build SDK Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push SDK
      uses: docker/build-push-action@v5
      with:
        context: components/monitoring
        file: components/monitoring/Dockerfile.sdk
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/monitoring-sdk:latest
          ghcr.io/${{ github.repository }}/monitoring-sdk:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-sidecar:
    name: Build Sidecar Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Sidecar
      uses: docker/build-push-action@v5
      with:
        context: components/monitoring
        file: components/monitoring/Dockerfile.sidecar
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/sidecar-agent:latest
          ghcr.io/${{ github.repository }}/sidecar-agent:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    name: Deploy Monitoring Component
    runs-on: ubuntu-latest
    needs: [build-sdk, build-sidecar]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying monitoring component to staging..."
        # Add your deployment script here

